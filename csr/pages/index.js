import { useState } from "react";
import Head from "next/head";
import Link from "next/link";
import { Container, FormControl, Col, Row, Card } from "react-bootstrap";
import axios from "axios";
import { QueryClient, QueryClientProvider, useQuery } from "react-query";

const queryClient = new QueryClient();

const Home = () => {
  const [query, setQuery] = useState("");
  const getPokemon = async (q) => {
    const { data } = await axios.get(`/api/search?q=${q}`);
    return data.map((pokemon) => ({
      ...pokemon,
      image: `/pokemon/${pokemon.name.english
        .toLowerCase()
        .replace(" ", "-")}.jpg`,
    }));
  };
  const { data } = useQuery([query], () => getPokemon(query));

  return (
    <div>
      <Head>
        <title>Pokemon</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <FormControl
          className="my-3"
          placeholder="Search"
          aria-label="Search"
          value={query}
          onChange={(evt) => setQuery(evt.target.value)}
        />
        {data && (
          <Row xs={1} className="g-4">
            {data.map((pokemon) => (
              <Col key={pokemon.id} md={4}>
                {/* link to detail page */}
                <Link href={`/pokemon/${pokemon.id}`}>
                  <Card>
                    <Card.Img
                      style={{
                        // width: "100%",
                        maxHeight: "250px",
                        objectFit: "cover",
                      }}
                      src={pokemon.image}
                    />
                    <Card.Body>
                      <Card.Title>{pokemon.name.english}</Card.Title>
                      <small>{pokemon.name.japanese} </small>
                      <small>{pokemon.type.join(", ")}</small>
                    </Card.Body>
                  </Card>
                </Link>
              </Col>
            ))}
          </Row>
        )}
      </Container>
    </div>
  );
};

export default function Wrapped() {
  return (
    <QueryClientProvider client={queryClient}>
      <Home />
    </QueryClientProvider>
  );
}
